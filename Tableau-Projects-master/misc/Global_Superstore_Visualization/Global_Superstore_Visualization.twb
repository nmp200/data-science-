<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.0915.2112                               -->
<workbook original-version='10.4' source-build='10.4.0 (10400.17.0915.2112)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (global-superstore)' inline='true' name='federated.1fovi5n12ksjzk12y4rcz0fzrlqj' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global-superstore' name='excel-direct.118r85s1bnuihh1g5lqkf1jgppf0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/jubin/Documents/My Tableau Repository/Udacity/TableauCourse/global-superstore.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Market]' />
              <expression op='[Returns].[Market]' />
            </expression>
          </clause>
          <relation connection='excel-direct.118r85s1bnuihh1g5lqkf1jgppf0' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' lost='0' outcome='2' processed='81721'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='City' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
              <column datatype='string' name='Country' ordinal='10' />
              <column datatype='string' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Market' ordinal='12' />
              <column datatype='string' name='Region' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.118r85s1bnuihh1g5lqkf1jgppf0' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1174:no:A1:C1174:0' header='yes' outcome='2'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Market' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market (Returns)]' value='[Returns].[Market]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1174:no:A1:C1174:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='LowQuantityCountries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Albania, Algeria, Angola and 73 more&quot;'>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Cote d&apos;Ivoire&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guadeloupe&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Macedonia&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Swaziland&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Yemen&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='AVG([Profit]) &lt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Product Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category_Heirarchy'>
          <field>[Category]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.713068' group-percentage='0.0326705' measure-ordering='alphabetic' measure-percentage='0.254261' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Category:nk]' palette=':filled' type='shape'>
            <map to=':filled/circle'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to=':filled/plus'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (superherodata-tableau)' inline='true' name='federated.0cziza60b3u0gs1fec83f1b5hm2p' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='superherodata-tableau' name='excel-direct.1vt4w9w1xat6ui14finx107ey6nl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/jubin/Documents/My Tableau Repository/Udacity/TableauCourse/superherodata-tableau.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1vt4w9w1xat6ui14finx107ey6nl' name='Superhero' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:H13:no:A1:H13:0' header='yes' outcome='6'>
            <column datatype='string' name='Name' ordinal='0' />
            <column datatype='string' name='Alignment' ordinal='1' />
            <column datatype='integer' name='Intelligence' ordinal='2' />
            <column datatype='integer' name='Strength' ordinal='3' />
            <column datatype='integer' name='Speed' ordinal='4' />
            <column datatype='integer' name='Durability' ordinal='5' />
            <column datatype='integer' name='Power' ordinal='6' />
            <column datatype='integer' name='Combat' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Superhero]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alignment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Alignment]</local-name>
            <parent-name>[Superhero]</parent-name>
            <remote-alias>Alignment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Intelligence</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Intelligence]</local-name>
            <parent-name>[Superhero]</parent-name>
            <remote-alias>Intelligence</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Strength</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Strength]</local-name>
            <parent-name>[Superhero]</parent-name>
            <remote-alias>Strength</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Speed]</local-name>
            <parent-name>[Superhero]</parent-name>
            <remote-alias>Speed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Durability</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Durability]</local-name>
            <parent-name>[Superhero]</parent-name>
            <remote-alias>Durability</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Power</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Power]</local-name>
            <parent-name>[Superhero]</parent-name>
            <remote-alias>Power</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Combat</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Combat]</local-name>
            <parent-name>[Superhero]</parent-name>
            <remote-alias>Combat</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Superhero]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H13:no:A1:H13:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.428181' measure-ordering='alphabetic' measure-percentage='0.571819' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (linkedin-top-skills)' inline='true' name='federated.1d0y0o51tisk2j14dbp5y1mmo6l3' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='linkedin-top-skills' name='excel-direct.0ilgvhy1r4n2mv1grht3p1kwb3lg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/jubin/Documents/My Tableau Repository/Udacity/TableauCourse/linkedin-top-skills.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ilgvhy1r4n2mv1grht3p1kwb3lg' name='Linkedin' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D799:no:A1:D799:0' header='yes' outcome='6'>
            <column datatype='string' name='Skill' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='integer' name='Rank' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Skill</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Skill]</local-name>
            <parent-name>[Linkedin]</parent-name>
            <remote-alias>Skill</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Linkedin]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Linkedin]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[Linkedin]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Linkedin]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D799:no:A1:D799:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.487004' measure-ordering='alphabetic' measure-percentage='0.512996' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[sum:Rank:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>24</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#79706e'>
              <bucket>15</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>25</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>20</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>16</bucket>
            </map>
            <map to='#d37295'>
              <bucket>17</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>21</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>22</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>23</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>19</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>14</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Global-Superstore0'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1fovi5n12ksjzk12y4rcz0fzrlqj' />
          </datasources>
          <datasource-dependencies datasource='federated.1fovi5n12ksjzk12y4rcz0fzrlqj'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Segment:nk]' />
              <color column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[sum:Profit:qk]</rows>
        <cols>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Global-Superstore1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1fovi5n12ksjzk12y4rcz0fzrlqj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1fovi5n12ksjzk12y4rcz0fzrlqj'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column-instance column='[Market]' derivation='Count' name='[cnt:Market:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[cnt:Market:qk]</rows>
        <cols>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Global-Superstore2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1fovi5n12ksjzk12y4rcz0fzrlqj' />
          </datasources>
          <datasource-dependencies datasource='federated.1fovi5n12ksjzk12y4rcz0fzrlqj'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Order Priority:nk]' />
              <shape column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk]' />
              <color column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Market:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[sum:Profit:qk]</rows>
        <cols>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[sum:Shipping Cost:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Global-Superstore3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1fovi5n12ksjzk12y4rcz0fzrlqj' />
          </datasources>
          <datasource-dependencies datasource='federated.1fovi5n12ksjzk12y4rcz0fzrlqj'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[sum:Profit:qk]</rows>
        <cols>([federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk] * [federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[tmn:Order Date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Global-Superstore4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1fovi5n12ksjzk12y4rcz0fzrlqj' />
          </datasources>
          <datasource-dependencies datasource='federated.1fovi5n12ksjzk12y4rcz0fzrlqj'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Region:nk]' direction='DESC' using='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[sum:Profit:qk]' />
          <filter class='categorical' column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[yr:Order Date:ok]</column>
            <column>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Sub-Category:nk]' />
              <tooltip column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[sum:Profit:qk]</rows>
        <cols>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Global-Superstore5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1fovi5n12ksjzk12y4rcz0fzrlqj' />
          </datasources>
          <datasource-dependencies datasource='federated.1fovi5n12ksjzk12y4rcz0fzrlqj'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market (Returns)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market (Returns)]' derivation='None' name='[none:Market (Returns):nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Order Priority:nk]' />
              <shape column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk]' />
              <lod column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Market (Returns):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[sum:Profit:qk]</rows>
        <cols>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[sum:Shipping Cost:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Global-Superstore6-Set'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1fovi5n12ksjzk12y4rcz0fzrlqj' />
          </datasources>
          <datasource-dependencies datasource='federated.1fovi5n12ksjzk12y4rcz0fzrlqj'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk] / [federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Sub-Category:nk])</rows>
        <cols>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[sum:Profit:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Global-Superstore7-Groups'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1fovi5n12ksjzk12y4rcz0fzrlqj' />
          </datasources>
          <datasource-dependencies datasource='federated.1fovi5n12ksjzk12y4rcz0fzrlqj'>
            <column caption='LowQuantityCountries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Albania, Algeria, Angola and 73 more&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Macedonia&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Swaziland&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Avg' name='[avg:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Country:nk]' />
              <color column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[Country (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[avg:Profit:qk]</rows>
        <cols>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[avg:Quantity:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Global-Superstore8-WorldMap'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Low Quantity Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1fovi5n12ksjzk12y4rcz0fzrlqj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1fovi5n12ksjzk12y4rcz0fzrlqj'>
            <column caption='LowQuantityCountries' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Albania, Algeria, Angola and 73 more&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Macedonia&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Swaziland&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[Country (group)]' />
              <lod column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Country:nk]' />
              <color column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[:Measure Names]' />
              <geometry column='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[Latitude (generated)]</rows>
        <cols>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='72'>
    <window class='worksheet' name='Global-Superstore0'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Segment:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Region:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Global-Superstore1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Calculation_939282062998605825:qk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Calculation_939282062998769667:qk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Calculation_939282062998892548:qk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Country:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Customer ID:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Market (Returns):nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Market:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Order ID (Returns):nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Order ID:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[usr:Calculation_939282062998654978:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[usr:Calculation_939282062998917126:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[usr:Calculation_939282062998982663:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[usr:Calculation_939282062999019528:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[usr:Calculation_939282062999044105:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[usr:Calculation_939282062999056394:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[usr:Calculation_939282062999076875:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Global-Superstore2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Order Priority:nk]&#10;[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Market:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Market:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Order Priority:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Global-Superstore3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[tyr:Order Date:qk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Global-Superstore4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk]' type='filter' values='relevant' />
            <card param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Region:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Sub-Category:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Global-Superstore5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Order Priority:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk]' type='shape' />
            <card param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Market (Returns):nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Market (Returns):nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Order Priority:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Global-Superstore6-Set'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Category:nk]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Global-Superstore7-Groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[Country (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Global-Superstore8-WorldMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[Country (group)]&#10;[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[Country (group)]</field>
            <field>[federated.1fovi5n12ksjzk12y4rcz0fzrlqj].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Global-Superstore0' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global-Superstore1' width='192'>
      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
      88L/B0BVTe2sqR3uAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Global-Superstore2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global-Superstore3' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Global-Superstore4' width='192'>
      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
      JAAi0P4fSme0kUuMQ7gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Global-Superstore5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global-Superstore6-Set' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global-Superstore7-Groups' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Global-Superstore8-WorldMap' width='192'>
      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
      qiv1Tvn/AW2FGSdmWXJLAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
